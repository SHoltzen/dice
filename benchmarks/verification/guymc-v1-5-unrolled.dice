fun step(packedstate : ( bool, ( bool, ( bool, ( bool, ( bool, ( bool, ( bool, ( bool, (bool, bool)))))))))) {	let x1 = fst packedstate in 	let x2 = fst (snd packedstate) in 	let x3 = fst (snd (snd packedstate)) in 	let x4 = fst (snd (snd (snd packedstate))) in 	let x5 = fst (snd (snd (snd (snd packedstate)))) in 	let x6 = fst (snd (snd (snd (snd (snd packedstate))))) in 	let x7 = fst (snd (snd (snd (snd (snd (snd packedstate)))))) in 	let x8 = fst (snd (snd (snd (snd (snd (snd (snd packedstate))))))) in 	let x9 = fst (snd (snd (snd (snd (snd (snd (snd (snd packedstate)))))))) in 	 let x10 = snd (snd (snd (snd (snd (snd (snd (snd (snd packedstate)))))))) in 	let parity = (((((((((x1 ^ x2) ^ x3) ^ x4) ^ x5) ^ x6) ^ x7) ^ x8) ^ x9) ^ x10) in	if parity then 		( x1, ( x2, ( x3, ( x4, ( x5, ( x6, ( x7, ( x8, (x9, x10)))))))))	else		let _cmd_act_1 =  true  in		let _cmd_act_2 =  true  in		let _count = 			(if _cmd_act_1 then int(2, 1) else int(2, 0)) + 			(if _cmd_act_2 then int(2, 1) else int(2, 0)) in 		if _count == int(2,0) then			( x1, ( x2, ( x3, ( x4, ( x5, ( x6, ( x7, ( x8, (x9, x10)))))))))		else			let _sel_act =				if _count == int(2, 1) then int(2, 1) else 					discrete(0.0, 0.5, 0.5)					in			let _offset0 = _sel_act in 			let _take1 = ((_offset0 == int(2, 1)) && _cmd_act_1) in 			let _offset1 = 				if (_cmd_act_1 && _offset0 > int(2, 0)) then 					_offset0 - int(2,1) 				else					_offset0			in			let _take2 = ((_offset1 == int(2, 1)) && _cmd_act_2) in 			let _offset2 = 				if (_cmd_act_2 && _offset1 > int(2, 0)) then 					_offset1 - int(2,1) 				else					_offset1			in			 if _take1 then				let _sel_update_0 = discrete(0.5000, 0.5000) in 				let _result_0 =					if _sel_update_0 == int(1, 0) then						( true )					 else 						( false )				in				let x1_prime = _result_0 in				let _sel_update_1 = discrete(0.3333, 0.6667) in 				let _result_1 =					if _sel_update_1 == int(1, 0) then						( true )					 else 						( false )				in				let x2_prime = _result_1 in				let _sel_update_2 = discrete(0.2000, 0.8000) in 				let _result_2 =					if _sel_update_2 == int(1, 0) then						( true )					 else 						( false )				in				let x3_prime = _result_2 in				let _sel_update_3 = discrete(0.1429, 0.8571) in 				let _result_3 =					if _sel_update_3 == int(1, 0) then						( true )					 else 						( false )				in				let x4_prime = _result_3 in				let _sel_update_4 = discrete(0.0909, 0.9091) in 				let _result_4 =					if _sel_update_4 == int(1, 0) then						( true )					 else 						( false )				in				let x5_prime = _result_4 in				let _sel_update_5 = discrete(0.0769, 0.9231) in 				let _result_5 =					if _sel_update_5 == int(1, 0) then						( true )					 else 						( false )				in				let x6_prime = _result_5 in				let _sel_update_6 = discrete(0.0588, 0.9412) in 				let _result_6 =					if _sel_update_6 == int(1, 0) then						( true )					 else 						( false )				in				let x7_prime = _result_6 in				let _sel_update_7 = discrete(0.0526, 0.9474) in 				let _result_7 =					if _sel_update_7 == int(1, 0) then						( true )					 else 						( false )				in				let x8_prime = _result_7 in				let _sel_update_8 = discrete(0.0435, 0.9565) in 				let _result_8 =					if _sel_update_8 == int(1, 0) then						( true )					 else 						( false )				in				let x9_prime = _result_8 in				let _sel_update_9 = discrete(0.0345, 0.9655) in 				let _result_9 =					if _sel_update_9 == int(1, 0) then						( true )					 else 						( false )				in				let x10_prime = _result_9 in				( x1_prime, ( x2_prime, ( x3_prime, ( x4_prime, ( x5_prime, ( x6_prime, ( x7_prime, ( x8_prime, (x9_prime, x10_prime)))))))))			else  if _take2 then				let _sel_update_0 = discrete(0.5000, 0.5000) in 				let _result_0 =					if _sel_update_0 == int(1, 0) then						( false )					 else 						(x1)				in				let x1_prime = _result_0 in				let _sel_update_1 = discrete(0.3333, 0.6667) in 				let _result_1 =					if _sel_update_1 == int(1, 0) then						( false )					 else 						(x2)				in				let x2_prime = _result_1 in				let _sel_update_2 = discrete(0.2000, 0.8000) in 				let _result_2 =					if _sel_update_2 == int(1, 0) then						( false )					 else 						(x3)				in				let x3_prime = _result_2 in				let _sel_update_3 = discrete(0.1429, 0.8571) in 				let _result_3 =					if _sel_update_3 == int(1, 0) then						( false )					 else 						(x4)				in				let x4_prime = _result_3 in				let _sel_update_4 = discrete(0.0909, 0.9091) in 				let _result_4 =					if _sel_update_4 == int(1, 0) then						( false )					 else 						(x5)				in				let x5_prime = _result_4 in				let _sel_update_5 = discrete(0.0769, 0.9231) in 				let _result_5 =					if _sel_update_5 == int(1, 0) then						( false )					 else 						(x6)				in				let x6_prime = _result_5 in				let _sel_update_6 = discrete(0.0588, 0.9412) in 				let _result_6 =					if _sel_update_6 == int(1, 0) then						( false )					 else 						(x7)				in				let x7_prime = _result_6 in				let _sel_update_7 = discrete(0.0526, 0.9474) in 				let _result_7 =					if _sel_update_7 == int(1, 0) then						( false )					 else 						(x8)				in				let x8_prime = _result_7 in				let _sel_update_8 = discrete(0.0435, 0.9565) in 				let _result_8 =					if _sel_update_8 == int(1, 0) then						( false )					 else 						(x9)				in				let x9_prime = _result_8 in				let _sel_update_9 = discrete(0.0345, 0.9655) in 				let _result_9 =					if _sel_update_9 == int(1, 0) then						( false )					 else 						(x10)				in				let x10_prime = _result_9 in				( x1_prime, ( x2_prime, ( x3_prime, ( x4_prime, ( x5_prime, ( x6_prime, ( x7_prime, ( x8_prime, (x9_prime, x10_prime)))))))))			else ( x1, ( x2, ( x3, ( x4, ( x5, ( x6, ( x7, ( x8, (x9, x10)))))))))}let res = step(( false, ( false, ( false, ( false, ( false, ( false, ( false, ( false, (false, false)))))))))) inlet res = step(res) inlet res = step(res) inlet res = step(res) inlet res = step(res) in	let x1 = fst res in 	let x2 = fst (snd res) in 	let x3 = fst (snd (snd res)) in 	let x4 = fst (snd (snd (snd res))) in 	let x5 = fst (snd (snd (snd (snd res)))) in 	let x6 = fst (snd (snd (snd (snd (snd res))))) in 	let x7 = fst (snd (snd (snd (snd (snd (snd res)))))) in 	let x8 = fst (snd (snd (snd (snd (snd (snd (snd res))))))) in 	let x9 = fst (snd (snd (snd (snd (snd (snd (snd (snd res)))))))) in 	let x10 = snd (snd (snd (snd (snd (snd (snd (snd (snd res)))))))) in 	let parity = (((((((((x1 ^ x2) ^ x3) ^ x4) ^ x5) ^ x6) ^ x7) ^ x8) ^ x9) ^ x10) inlet _x0 =  false  in (parity, _x0)