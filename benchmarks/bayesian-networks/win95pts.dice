let AppOK = flip 0.995000 in
let DataFile = flip 0.995000 in
let AppData = if (AppOK) then (if (DataFile) then (flip 0.999900) else (flip 0.000000)) else (if (DataFile) then (flip 0.000000) else (flip 0.500000)) in
let DskLocal = flip 0.970000 in
let PrtSpool = flip 0.950000 in
let PrntPrcssTm = if (PrtSpool) then (flip 0.990000) else (flip 1.000000) in
let AppDtGnTm = if (PrtSpool) then (flip 1.000000) else (flip 0.990000) in
let HrglssDrtnAftrPrnt = if (AppDtGnTm) then (flip 0.990000) else (flip 0.100000) in
let PrtOn = flip 0.900000 in
let PrtStatOff = if (PrtOn) then (flip 0.990000) else (flip 0.010000) in
let PrtPaper = flip 0.980000 in
let PrtStatPaper = if (PrtPaper) then (flip 0.999000) else (flip 0.001000) in
let NetPrint = flip 0.800000 in
let PrtDriver = flip 0.900000 in
let PrtThread = flip 0.999900 in
let EMFOK = if (AppData) then (if (DskLocal) then (if (PrtThread) then (flip 0.990000) else (flip 0.050000)) else (if (PrtThread) then (flip 0.000000) else (flip 0.500000))) else (if (DskLocal) then (if (PrtThread) then (flip 0.100000) else (flip 0.500000)) else (if (PrtThread) then (flip 0.500000) else (flip 0.500000))) in
let GDIIN = if (AppData) then (if (PrtSpool) then (if (EMFOK) then (flip 1.000000) else (flip 0.000000)) else (if (EMFOK) then (flip 1.000000) else (flip 1.000000))) else (if (PrtSpool) then (if (EMFOK) then (flip 0.000000) else (flip 0.000000)) else (if (EMFOK) then (flip 0.000000) else (flip 0.000000))) in
let DrvSet = flip 0.990000 in
let DrvOK = flip 0.990000 in
let GDIOUT = if (PrtDriver) then (if (GDIIN) then (if (DrvSet) then (if (DrvOK) then (flip 0.990000) else (flip 0.200000)) else (if (DrvOK) then (flip 0.900000) else (flip 0.500000))) else (if (DrvSet) then (if (DrvOK) then (flip 0.100000) else (flip 0.500000)) else (if (DrvOK) then (flip 0.500000) else (flip 0.500000)))) else (if (GDIIN) then (if (DrvSet) then (if (DrvOK) then (flip 0.100000) else (flip 0.500000)) else (if (DrvOK) then (flip 0.500000) else (flip 0.500000))) else (if (DrvSet) then (if (DrvOK) then (flip 0.500000) else (flip 0.500000)) else (if (DrvOK) then (flip 0.500000) else (flip 0.500000)))) in
let PrtSel = flip 0.990000 in
let PrtDataOut = if (GDIOUT) then (if (PrtSel) then (flip 0.990000) else (flip 0.000000)) else (if (PrtSel) then (flip 0.000000) else (flip 0.500000)) in
let PrtFile = if (PrtDataOut) then (flip 0.800000) else (flip 0.200000) in
let PrtPath = flip 0.970000 in
let NtwrkCnfg = flip 0.980000 in
let PTROFFLINE = flip 0.700000 in
let PrtIcon = if (NtwrkCnfg) then (if (PTROFFLINE) then (flip 0.999900) else (flip 0.700000)) else (if (PTROFFLINE) then (flip 0.250000) else (flip 0.500000)) in
let NetOK = if (PrtPath) then (if (NtwrkCnfg) then (if (PTROFFLINE) then (flip 0.990000) else (flip 0.000000)) else (if (PTROFFLINE) then (flip 0.100000) else (flip 0.500000))) else (if (NtwrkCnfg) then (if (PTROFFLINE) then (flip 0.000000) else (flip 0.500000)) else (if (PTROFFLINE) then (flip 0.500000) else (flip 0.500000))) in
let PrtCbl = flip 0.980000 in
let PrtPort = flip 0.990000 in
let CblPrtHrdwrOK = flip 0.990000 in
let REPEAT = if (CblPrtHrdwrOK) then (if (NtwrkCnfg) then (flip 1.000000) else (flip 0.500000)) else (if (NtwrkCnfg) then (flip 0.500000) else (flip 0.500000)) in
let DS_LCLOK = if (AppData) then (if (PrtCbl) then (if (PrtPort) then (if (CblPrtHrdwrOK) then (flip 1.000000) else (flip 0.100000)) else (if (CblPrtHrdwrOK) then (flip 0.000000) else (flip 0.500000))) else (if (PrtPort) then (if (CblPrtHrdwrOK) then (flip 0.000000) else (flip 0.500000)) else (if (CblPrtHrdwrOK) then (flip 0.500000) else (flip 0.500000)))) else (if (PrtCbl) then (if (PrtPort) then (if (CblPrtHrdwrOK) then (flip 0.100000) else (flip 0.500000)) else (if (CblPrtHrdwrOK) then (flip 0.500000) else (flip 0.500000))) else (if (PrtPort) then (if (CblPrtHrdwrOK) then (flip 0.500000) else (flip 0.500000)) else (if (CblPrtHrdwrOK) then (flip 0.500000) else (flip 0.500000)))) in
let LclOK = if (PrtCbl) then (if (PrtPort) then (if (CblPrtHrdwrOK) then (flip 0.999000) else (flip 0.010000)) else (if (CblPrtHrdwrOK) then (flip 0.000000) else (flip 0.500000))) else (if (PrtPort) then (if (CblPrtHrdwrOK) then (flip 0.000000) else (flip 0.500000)) else (if (CblPrtHrdwrOK) then (flip 0.500000) else (flip 0.500000))) in
let DSApplctn = flip 0.150000 in
let PrtMpTPth = flip 0.800000 in
let DS_NTOK = if (AppData) then (if (PrtPath) then (if (PrtMpTPth) then (if (NtwrkCnfg) then (if (PTROFFLINE) then (flip 0.990000) else (flip 0.000000)) else (if (PTROFFLINE) then (flip 0.100000) else (flip 0.500000))) else (if (NtwrkCnfg) then (if (PTROFFLINE) then (flip 0.000000) else (flip 0.500000)) else (if (PTROFFLINE) then (flip 0.500000) else (flip 0.500000)))) else (if (PrtMpTPth) then (if (NtwrkCnfg) then (if (PTROFFLINE) then (flip 0.000000) else (flip 0.500000)) else (if (PTROFFLINE) then (flip 0.500000) else (flip 0.500000))) else (if (NtwrkCnfg) then (if (PTROFFLINE) then (flip 0.500000) else (flip 0.500000)) else (if (PTROFFLINE) then (flip 0.500000) else (flip 0.500000))))) else (if (PrtPath) then (if (PrtMpTPth) then (if (NtwrkCnfg) then (if (PTROFFLINE) then (flip 0.200000) else (flip 0.500000)) else (if (PTROFFLINE) then (flip 0.500000) else (flip 0.500000))) else (if (NtwrkCnfg) then (if (PTROFFLINE) then (flip 0.500000) else (flip 0.500000)) else (if (PTROFFLINE) then (flip 0.500000) else (flip 0.500000)))) else (if (PrtMpTPth) then (if (NtwrkCnfg) then (if (PTROFFLINE) then (flip 0.500000) else (flip 0.500000)) else (if (PTROFFLINE) then (flip 0.500000) else (flip 0.500000))) else (if (NtwrkCnfg) then (if (PTROFFLINE) then (flip 0.500000) else (flip 0.500000)) else (if (PTROFFLINE) then (flip 0.500000) else (flip 0.500000))))) in
let PC2PRT = if (NetPrint) then (if (PrtDataOut) then (if (NetOK) then (if (LclOK) then (if (DSApplctn) then (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 1.000000) else (flip 0.000000))) else (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 1.000000)) else (if (DS_LCLOK) then (flip 1.000000) else (flip 1.000000)))) else (if (DSApplctn) then (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 1.000000) else (flip 0.000000))) else (if (DS_NTOK) then (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000))))) else (if (LclOK) then (if (DSApplctn) then (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 1.000000) else (flip 0.000000))) else (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 1.000000)) else (if (DS_LCLOK) then (flip 1.000000) else (flip 1.000000)))) else (if (DSApplctn) then (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 1.000000) else (flip 0.000000))) else (if (DS_NTOK) then (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000)))))) else (if (NetOK) then (if (LclOK) then (if (DSApplctn) then (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 1.000000) else (flip 0.000000))) else (if (DS_NTOK) then (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000)))) else (if (DSApplctn) then (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 1.000000) else (flip 0.000000))) else (if (DS_NTOK) then (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000))))) else (if (LclOK) then (if (DSApplctn) then (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 1.000000) else (flip 0.000000))) else (if (DS_NTOK) then (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000)))) else (if (DSApplctn) then (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 1.000000) else (flip 0.000000))) else (if (DS_NTOK) then (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000))))))) else (if (PrtDataOut) then (if (NetOK) then (if (LclOK) then (if (DSApplctn) then (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 1.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000))) else (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 1.000000)) else (if (DS_LCLOK) then (flip 1.000000) else (flip 1.000000)))) else (if (DSApplctn) then (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 1.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000))) else (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 1.000000)) else (if (DS_LCLOK) then (flip 1.000000) else (flip 1.000000))))) else (if (LclOK) then (if (DSApplctn) then (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 1.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000))) else (if (DS_NTOK) then (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000)))) else (if (DSApplctn) then (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 1.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000))) else (if (DS_NTOK) then (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000)))))) else (if (NetOK) then (if (LclOK) then (if (DSApplctn) then (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 1.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000))) else (if (DS_NTOK) then (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000)))) else (if (DSApplctn) then (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 1.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000))) else (if (DS_NTOK) then (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000))))) else (if (LclOK) then (if (DSApplctn) then (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 1.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000))) else (if (DS_NTOK) then (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000)))) else (if (DSApplctn) then (if (DS_NTOK) then (if (DS_LCLOK) then (flip 1.000000) else (flip 1.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000))) else (if (DS_NTOK) then (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000)) else (if (DS_LCLOK) then (flip 0.000000) else (flip 0.000000))))))) in
let PrtMem = flip 0.950000 in
let PrtStatMem = if (PrtMem) then (flip 0.999000) else (flip 0.200000) in
let NtGrbld = if (AppData) then (if (PrtDriver) then (if (PrtMem) then (if (NtwrkCnfg) then (flip 1.000000) else (flip 0.400000)) else (if (NtwrkCnfg) then (flip 0.200000) else (flip 0.500000))) else (if (PrtMem) then (if (NtwrkCnfg) then (flip 0.400000) else (flip 0.500000)) else (if (NtwrkCnfg) then (flip 0.500000) else (flip 0.500000)))) else (if (PrtDriver) then (if (PrtMem) then (if (NtwrkCnfg) then (flip 0.300000) else (flip 0.500000)) else (if (NtwrkCnfg) then (flip 0.500000) else (flip 0.500000))) else (if (PrtMem) then (if (NtwrkCnfg) then (flip 0.500000) else (flip 0.500000)) else (if (NtwrkCnfg) then (flip 0.500000) else (flip 0.500000)))) in
let LclGrbld = if (AppData) then (if (PrtDriver) then (if (PrtMem) then (if (CblPrtHrdwrOK) then (flip 1.000000) else (flip 0.100000)) else (if (CblPrtHrdwrOK) then (flip 0.200000) else (flip 0.500000))) else (if (PrtMem) then (if (CblPrtHrdwrOK) then (flip 0.400000) else (flip 0.500000)) else (if (CblPrtHrdwrOK) then (flip 0.500000) else (flip 0.500000)))) else (if (PrtDriver) then (if (PrtMem) then (if (CblPrtHrdwrOK) then (flip 0.200000) else (flip 0.500000)) else (if (CblPrtHrdwrOK) then (flip 0.500000) else (flip 0.500000))) else (if (PrtMem) then (if (CblPrtHrdwrOK) then (flip 0.500000) else (flip 0.500000)) else (if (CblPrtHrdwrOK) then (flip 0.500000) else (flip 0.500000)))) in
let GrbldOtpt = if (NetPrint) then (if (LclGrbld) then (if (NtGrbld) then (flip 1.000000) else (flip 1.000000)) else (if (NtGrbld) then (flip 0.000000) else (flip 0.000000))) else (if (LclGrbld) then (if (NtGrbld) then (flip 1.000000) else (flip 0.000000)) else (if (NtGrbld) then (flip 1.000000) else (flip 0.000000))) in
let DeskPrntSpd = if (PrtMem) then (if (AppDtGnTm) then (if (PrntPrcssTm) then (flip 0.999000) else (flip 0.001000)) else (if (PrntPrcssTm) then (flip 0.001000) else (flip 0.500000))) else (if (AppDtGnTm) then (if (PrntPrcssTm) then (flip 0.250000) else (flip 0.500000)) else (if (PrntPrcssTm) then (flip 0.500000) else (flip 0.500000))) in
let PrtTimeOut = flip 0.940000 in
let FllCrrptdBffr = flip 0.850000 in
let TnrSpply = flip 0.995000 in
let PrtStatToner = if (TnrSpply) then (flip 0.999000) else (flip 0.001000) in
let PrtData = if (PrtOn) then (if (PrtPaper) then (if (PC2PRT) then (if (PrtMem) then (if (PrtTimeOut) then (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.990000) else (flip 0.010000)) else (if (TnrSpply) then (flip 0.020000) else (flip 0.500000))) else (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.000000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)))) else (if (PrtTimeOut) then (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.100000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))) else (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))))) else (if (PrtMem) then (if (PrtTimeOut) then (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.000000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))) else (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)))) else (if (PrtTimeOut) then (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))) else (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)))))) else (if (PC2PRT) then (if (PrtMem) then (if (PrtTimeOut) then (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.000000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))) else (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)))) else (if (PrtTimeOut) then (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))) else (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))))) else (if (PrtMem) then (if (PrtTimeOut) then (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))) else (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)))) else (if (PrtTimeOut) then (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))) else (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))))))) else (if (PrtPaper) then (if (PC2PRT) then (if (PrtMem) then (if (PrtTimeOut) then (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.000000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))) else (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)))) else (if (PrtTimeOut) then (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))) else (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))))) else (if (PrtMem) then (if (PrtTimeOut) then (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))) else (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)))) else (if (PrtTimeOut) then (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))) else (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)))))) else (if (PC2PRT) then (if (PrtMem) then (if (PrtTimeOut) then (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))) else (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)))) else (if (PrtTimeOut) then (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))) else (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))))) else (if (PrtMem) then (if (PrtTimeOut) then (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))) else (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)))) else (if (PrtTimeOut) then (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))) else (if (FllCrrptdBffr) then (if (TnrSpply) then (flip 0.500000) else (flip 0.500000)) else (if (TnrSpply) then (flip 0.500000) else (flip 0.500000))))))) in
let Problem1 = if (PrtData) then (flip 1.000000) else (flip 0.000000) in
let PgOrnttnOK = flip 0.950000 in
let PrntngArOK = flip 0.980000 in
let CmpltPgPrntd = if (PrtMem) then (if (PgOrnttnOK) then (if (PrntngArOK) then (flip 0.990000) else (flip 0.100000)) else (if (PrntngArOK) then (flip 0.010000) else (flip 0.500000))) else (if (PgOrnttnOK) then (if (PrntngArOK) then (flip 0.300000) else (flip 0.500000)) else (if (PrntngArOK) then (flip 0.500000) else (flip 0.500000))) in
let ScrnFntNtPrntrFnt = flip 0.950000 in
let GrphcsRltdDrvrSttngs = flip 0.950000 in
let EPSGrphc = flip 0.990000 in
let PSGRAPHIC = if (PrtMem) then (if (GrphcsRltdDrvrSttngs) then (if (EPSGrphc) then (flip 0.999000) else (flip 1.000000)) else (if (EPSGrphc) then (flip 0.100000) else (flip 0.500000))) else (if (GrphcsRltdDrvrSttngs) then (if (EPSGrphc) then (flip 0.250000) else (flip 0.500000)) else (if (EPSGrphc) then (flip 0.500000) else (flip 0.500000))) in
let NnPSGrphc = if (PrtMem) then (if (GrphcsRltdDrvrSttngs) then (if (EPSGrphc) then (flip 0.999000) else (flip 0.000000)) else (if (EPSGrphc) then (flip 0.100000) else (flip 0.500000))) else (if (GrphcsRltdDrvrSttngs) then (if (EPSGrphc) then (flip 0.250000) else (flip 0.500000)) else (if (EPSGrphc) then (flip 0.500000) else (flip 0.500000))) in
let PrtPScript = flip 0.400000 in
let AvlblVrtlMmry = if (PrtPScript) then (flip 0.980000) else (flip 1.000000) in
let IncmpltPS = if (CmpltPgPrntd) then (if (AvlblVrtlMmry) then (flip 1.000000) else (flip 0.300000)) else (if (AvlblVrtlMmry) then (flip 0.000000) else (flip 0.500000)) in
let Problem3 = if (CmpltPgPrntd) then (if (PrtPScript) then (if (IncmpltPS) then (flip 0.000000) else (flip 1.000000)) else (if (IncmpltPS) then (flip 0.000000) else (flip 0.000000))) else (if (PrtPScript) then (if (IncmpltPS) then (flip 0.000000) else (flip 1.000000)) else (if (IncmpltPS) then (flip 1.000000) else (flip 1.000000))) in
let GrbldPS = if (GrbldOtpt) then (if (AvlblVrtlMmry) then (flip 1.000000) else (flip 0.100000)) else (if (AvlblVrtlMmry) then (flip 0.000000) else (flip 0.500000)) in
let Problem6 = if (GrbldOtpt) then (if (PrtPScript) then (if (GrbldPS) then (flip 1.000000) else (flip 0.000000)) else (if (GrbldPS) then (flip 1.000000) else (flip 1.000000))) else (if (PrtPScript) then (if (GrbldPS) then (flip 1.000000) else (flip 0.000000)) else (if (GrbldPS) then (flip 0.000000) else (flip 0.000000))) in
let TstpsTxt = if (PrtPScript) then (if (AvlblVrtlMmry) then (flip 0.999000) else (flip 0.001000)) else (if (AvlblVrtlMmry) then (flip 1.000000) else (flip 1.000000)) in
let PSERRMEM = if (PrtPScript) then (if (AvlblVrtlMmry) then (flip 1.000000) else (flip 0.050000)) else (if (AvlblVrtlMmry) then (flip 1.000000) else (flip 1.000000)) in
let Problem4 = if (NnPSGrphc) then (if (PrtPScript) then (if (PSGRAPHIC) then (flip 0.000000) else (flip 1.000000)) else (if (PSGRAPHIC) then (flip 0.000000) else (flip 0.000000))) else (if (PrtPScript) then (if (PSGRAPHIC) then (flip 0.000000) else (flip 1.000000)) else (if (PSGRAPHIC) then (flip 1.000000) else (flip 1.000000))) in
let TrTypFnts = flip 0.900000 in
let FntInstlltn = flip 0.980000 in
let NnTTOK = if (PrtMem) then (if (ScrnFntNtPrntrFnt) then (if (FntInstlltn) then (flip 0.990000) else (flip 0.100000)) else (if (FntInstlltn) then (flip 0.100000) else (flip 0.500000))) else (if (ScrnFntNtPrntrFnt) then (if (FntInstlltn) then (flip 0.500000) else (flip 0.500000)) else (if (FntInstlltn) then (flip 0.500000) else (flip 0.500000))) in
let PrntrAccptsTrtyp = flip 0.900000 in
let TTOK = if (PrtMem) then (if (FntInstlltn) then (if (PrntrAccptsTrtyp) then (flip 0.990000) else (flip 0.000000)) else (if (PrntrAccptsTrtyp) then (flip 0.100000) else (flip 0.500000))) else (if (FntInstlltn) then (if (PrntrAccptsTrtyp) then (flip 0.500000) else (flip 0.500000)) else (if (PrntrAccptsTrtyp) then (flip 0.500000) else (flip 0.500000))) in
let Problem5 = if (TrTypFnts) then (if (TTOK) then (if (NnTTOK) then (flip 0.000000) else (flip 0.000000)) else (if (NnTTOK) then (flip 1.000000) else (flip 1.000000))) else (if (TTOK) then (if (NnTTOK) then (flip 0.000000) else (flip 1.000000)) else (if (NnTTOK) then (flip 0.000000) else (flip 1.000000))) in
let PrtQueue = flip 0.990000 in
let NtSpd = if (DeskPrntSpd) then (if (NtwrkCnfg) then (if (PrtQueue) then (flip 0.999000) else (flip 0.250000)) else (if (PrtQueue) then (flip 0.250000) else (flip 0.500000))) else (if (NtwrkCnfg) then (if (PrtQueue) then (flip 0.000000) else (flip 0.500000)) else (if (PrtQueue) then (flip 0.500000) else (flip 0.500000))) in
let Problem2 = if (NetPrint) then (if (DeskPrntSpd) then (if (NtSpd) then (flip 1.000000) else (flip 1.000000)) else (if (NtSpd) then (flip 0.000000) else (flip 0.000000))) else (if (DeskPrntSpd) then (if (NtSpd) then (flip 1.000000) else (flip 0.000000)) else (if (NtSpd) then (flip 1.000000) else (flip 0.000000))) in
(Problem2,(NtSpd,(PrtQueue,(Problem5,(TTOK,(PrntrAccptsTrtyp,(NnTTOK,(FntInstlltn,(TrTypFnts,(Problem4,(PSERRMEM,(TstpsTxt,(Problem6,(GrbldPS,(Problem3,(IncmpltPS,(AvlblVrtlMmry,(PrtPScript,(NnPSGrphc,(PSGRAPHIC,(EPSGrphc,(GrphcsRltdDrvrSttngs,(ScrnFntNtPrntrFnt,(CmpltPgPrntd,(PrntngArOK,(PgOrnttnOK,(Problem1,(PrtData,(PrtStatToner,(TnrSpply,(FllCrrptdBffr,(PrtTimeOut,(DeskPrntSpd,(GrbldOtpt,(LclGrbld,(NtGrbld,(PrtStatMem,(PrtMem,(PC2PRT,(DS_NTOK,(PrtMpTPth,(DSApplctn,(LclOK,(DS_LCLOK,(REPEAT,(CblPrtHrdwrOK,(PrtPort,(PrtCbl,(NetOK,(PrtIcon,(PTROFFLINE,(NtwrkCnfg,(PrtPath,(PrtFile,(PrtDataOut,(PrtSel,(GDIOUT,(DrvOK,(DrvSet,(GDIIN,(EMFOK,(PrtThread,(PrtDriver,(NetPrint,(PrtStatPaper,(PrtPaper,(PrtStatOff,(PrtOn,(HrglssDrtnAftrPrnt,(AppDtGnTm,(PrntPrcssTm,(PrtSpool,(DskLocal,(AppData,(DataFile,AppOK)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))